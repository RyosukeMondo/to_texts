[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zlibrary-downloader"
version = "0.1.0"
description = "CLI tool to search and download books from Z-Library"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["zlibrary", "books", "downloader", "cli", "tui"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.8.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "flake8-bugbear>=24.0.0",
    "flake8-comprehensions>=3.14.0",
    "flake8-simplify>=0.21.0",
    "radon>=6.0.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "types-requests>=2.31.0",
]

[project.scripts]
zlibrary-downloader = "zlibrary_downloader.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/to_texts"
Repository = "https://github.com/yourusername/to_texts"
Issues = "https://github.com/yourusername/to_texts/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["zlibrary_downloader*"]

[tool.black]
line-length = 100
target-version = ['py38']
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | \.eggs
  | \.egg-info
)/
'''

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Temporary: Allow gradual typing during type hints migration (tasks 13-16)
# These will be removed once all modules have type hints
[[tool.mypy.overrides]]
module = "zlibrary_downloader.client"
ignore_errors = true

[[tool.mypy.overrides]]
module = "zlibrary_downloader.cli"
ignore_errors = true

[[tool.mypy.overrides]]
module = "zlibrary_downloader.tui"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --cov=zlibrary_downloader
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
    --strict-markers
    -v
"""

[tool.coverage.run]
source = ["zlibrary_downloader"]
omit = ["*/tests/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
